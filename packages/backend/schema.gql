# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateNote {
  createdBy: ID!
  noteText: String!
}

input CreateTicketInput {
  description: String!
  product: TicketType!
}

type FieldError {
  field: String
  message: String!
}

type Mutation {
  deleteTicket(ticketId: String!): TicketResponse
  login(options: UserLoginInput!): UserResponse!
  register(options: UserRegInput!): UserResponse!
  setTicket(ticket: CreateTicketInput!): TicketResponse!
  setTicketNote(note: CreateNote!, ticketId: String!): TicketResponse!
  updateTicket(ticket: UpdateTicketInput!): TicketResponse!
}

type Note {
  createdBy: ID!
  noteText: String!
}

type Query {
  ticket(ticketId: String!): TicketResponse
  tickets: TicketsResponse!
  userTickets: TicketsResponse!
}

"""The user Role"""
enum Role {
  Admin
  User
}

type Ticket {
  _id: ID!
  description: String!
  notes: [Note!]
  product: TicketType!
  status: TicketStatus!
  userDoc: User!
}

type TicketResponse {
  errors: [FieldError!]
  success: Boolean!
  ticket: Ticket
}

"""The status of the ticket"""
enum TicketStatus {
  Closed
  Open
  Submitted
}

"""The type of ticket"""
enum TicketType {
  Engine
  FrontWing
  FuelPump
  RearWing
  Tires
}

type TicketsResponse {
  errors: [FieldError!]
  success: Boolean!
  tickets: [Ticket!]
}

input UpdateTicketInput {
  description: String!
  id: String!
  product: TicketType!
  status: TicketStatus
}

type User {
  _id: ID!
  email: String!
  role: Role!
  token: String
  username: String!
}

input UserLoginInput {
  email: String!
  password: String!
}

input UserRegInput {
  email: String!
  password: String!
  role: Role!
  username: String!
}

type UserResponse {
  errors: [FieldError!]
  user: User
}
